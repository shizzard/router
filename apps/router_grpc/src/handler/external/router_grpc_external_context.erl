%% This module contains external routing calls context, that is related to the
%% router routines.
%% For example, agent_id and agent_instance are required for stateful virtual
%% service calls; request_id is required to either be set by client or be
%% autogenerated upon receiving a request to be able to track it down the
%% stream, etc.
%% If you have an idea of some header that may alter the router behavior
%% somehow, this context is the right place to put it.

-module(router_grpc_external_context).

-include_lib("router_grpc/include/router_grpc_external_context.hrl").
-include_lib("router_grpc/include/router_grpc.hrl").

-export([to_headers_map/1]).

-type t() :: #router_grpc_external_context{}.
-export_type([t/0]).



%% Interface



-spec to_headers_map(Ctx :: t()) ->
  Ret :: #{binary() => binary()}.

to_headers_map(Ctx) ->
  maps:from_list(
    case Ctx#router_grpc_external_context.agent_id of
      undefined -> [];
      AgentId -> [{?router_grpc_header_agent_id, AgentId}]
    end ++
    case Ctx#router_grpc_external_context.agent_instance of
      undefined -> [];
      AgentInstance -> [{?router_grpc_header_agent_instance, AgentInstance}]
    end ++
    case Ctx#router_grpc_external_context.request_id of
      undefined -> [];
      RequestId -> [{?router_grpc_header_request_id, RequestId}]
    end
  ).
