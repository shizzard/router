[doc]
Check if router accepts two gRPC virtual service registrations with the same names and different endpoints
[enddoc]

[include ../../__common/common.luxinc]
[include ../../__common/grpc.luxinc]
[include ../../__common/jq.luxinc]

[global service-definition=lg/service/router/registry.proto]
[global request-file-first-register=json/07-first-service-request.json]
[global response-file-first-register=json/07-first-service-response.json]
[global request-file-second-register=json/07-second-service-request.json]
[global response-file-second-register=json/07-second-service-response.json]
[global request-file-list=json/07-list-request.json]
[global response-file-list=json/07-list-response.json]
[global service=lg.service.router.RegistryService]
[global method-register=RegisterVirtualService]
[global method-list=ListVirtualServices]

[shell router]
  [invoke app-start]

[shell request]
  [progress (register first service)]
  [invoke grpc-call-unary ${service-definition} ${request-file-first-register} ${response-file-first-register} ${service} ${method-register}]
  [sleep 1]

[shell response]
  [progress (check response)]
  [invoke jq-check-file-match ${response-file-first-register} .header.\"content-type\" "application/grpc+proto"]
  [invoke jq-check-file-match ${response-file-first-register} .header.\"grpc-user-agent\" "router/"]
  [invoke jq-check-file-match ${response-file-first-register} .status.code OK]
  [invoke jq-check-file-match ${response-file-first-register} .status.number 0]
  [invoke jq-check-file-match ${response-file-first-register} .messages[0] "{}"]
  [invoke jq-check-file-match ${response-file-first-register} .trailer "{}"]

[shell request]
  [progress (register second service)]
  [invoke grpc-call-unary ${service-definition} ${request-file-second-register} ${response-file-second-register} ${service} ${method-register}]
  [sleep 1]

[shell response]
  [progress (check response)]
  [invoke jq-check-file-match ${response-file-second-register} .header.\"content-type\" "application/grpc+proto"]
  [invoke jq-check-file-match ${response-file-second-register} .header.\"grpc-user-agent\" "router/"]
  [invoke jq-check-file-match ${response-file-second-register} .status.code OK]
  [invoke jq-check-file-match ${response-file-second-register} .status.number 0]
  [invoke jq-check-file-match ${response-file-second-register} .messages[0] "{}"]
  [invoke jq-check-file-match ${response-file-second-register} .trailer "{}"]

[shell request]
  [progress (list)]
  [invoke grpc-call-unary ${service-definition} ${request-file-list} ${response-file-list} ${service} ${method-list}]
  [sleep 1]

[shell response]
  [progress (check response)]
  [invoke jq-check-file-match ${response-file-list} .header.\"content-type\" "application/grpc+proto"]
  [invoke jq-check-file-match ${response-file-list} .header.\"grpc-user-agent\" "router/"]
  [invoke jq-check-file-match ${response-file-list} .status.code OK]
  [invoke jq-check-file-match ${response-file-list} .status.number 0]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[0].stateless.package lg.test.package]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[0].stateless.name StatelessService]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[0].stateless.methods[0].name MethodOne]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[0].endpoint.host "test-1.lg"]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[0].endpoint.port 8137]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[1].stateless.package lg.test.package]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[1].stateless.name StatelessService]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[1].stateless.methods[0].name MethodOne]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[1].endpoint.host "test-2.lg"]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[1].endpoint.port 8137]
  [invoke jq-check-file-match ${response-file-list} .trailer "{}"]

[cleanup]
