[doc]
Check if router accepts gRPC virtual service registration.
[enddoc]

[include ../../__common/common.luxinc]
[include ../../__common/grpc.luxinc]
[include ../../__common/jq.luxinc]
[include ../../__router/registry-service.luxinc]

[global request-file-register=json/01-happy-path-stateful-request.json]
[global response-file-register=json/01-happy-path-stateful-response.json]
[global request-file-list=json/01-list-stateful-request.json]
[global response-file-list=json/01-list-stateful-response.json]

[shell router]
  [invoke app-start]

[shell request]
  [progress (register)]
  [invoke grpc-call-unary ${service-definition} ${request-file-register} ${response-file-register} ${service-name} ${method-register}]

[shell response]
  [progress (check response)]
  [invoke jq-check-file-match ${response-file-register} .header.\"content-type\" "application/grpc+proto"]
  [invoke jq-check-file-match ${response-file-register} .header.\"grpc-user-agent\" "router/"]
  [invoke jq-check-file-match ${response-file-register} .status.code OK]
  [invoke jq-check-file-match ${response-file-register} .status.number 0]
  [invoke jq-check-file-match ${response-file-register} .messages[0] "{}"]
  [invoke jq-check-file-match ${response-file-register} .trailer "{}"]

[shell request]
  [progress (list)]
  [invoke grpc-call-unary ${service-definition} ${request-file-list} ${response-file-list} ${service-name} ${method-list}]

[shell response]
  [progress (check response)]
  [invoke jq-check-file-match ${response-file-list} .header.\"content-type\" "application/grpc+proto"]
  [invoke jq-check-file-match ${response-file-list} .header.\"grpc-user-agent\" "router/"]
  [invoke jq-check-file-match ${response-file-list} .status.code OK]
  [invoke jq-check-file-match ${response-file-list} .status.number 0]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[0].stateful.package lg.test.package]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[0].stateful.name StatefulService]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[0].stateful.methods[0].name MethodOne]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[0].stateful.cmp BLOCKING]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[0].endpoint.host "test.lg"]
  [invoke jq-check-file-match ${response-file-list} .messages[0].services[0].endpoint.port 8137]
  [invoke jq-check-file-match ${response-file-list} .trailer "{}"]

[cleanup]
