[doc]
Check if router fails to set maintenance mode for a gRPC virtual service with empty or restricted package.
[enddoc]

[include ../../__common/common.luxinc]
[include ../../__common/grpc.luxinc]
[include ../../__common/jq.luxinc]
[include ../../__router/registry-service.luxinc]

[global request-file-empty=json/02-empty-package-request.json]
[global request-file-restricted=json/02-restricted-package-request.json]

[shell router]
  [invoke app-start]

[shell empty]
  [progress (set maintenance with empty package)]
  [invoke grpcc-start-unary-nodata ${grpc-service-name} ${grpc-method-set-maintenance} json "" ${request-file-empty}]
  [progress (check response)]
  [invoke jq-check-file-match ${headers} .headers.\"content-type\" "application/grpc+proto"]
  [invoke jq-check-file-match ${headers} .headers.\"grpc-user-agent\" "router/"]
  [invoke jq-check-file-match ${headers} .status 200]
  [invoke jq-check-file-match ${trailers} .trailers.\"grpc-status\" 3]
  [invoke jq-check-file-match ${trailers} .trailers.\"grpc-message\" "Invalid payload"]
  [invoke jq-check-file-match ${trailers} .trailers.\"package_empty\" "Virtual service package cannot be empty"]

[shell restricted]
  [progress (set maintenance with restricted package)]
  [invoke grpcc-start-unary-nodata ${grpc-service-name} ${grpc-method-set-maintenance} json "" ${request-file-restricted}]
  [progress (check response)]
  [invoke jq-check-file-match ${headers} .headers.\"content-type\" "application/grpc+proto"]
  [invoke jq-check-file-match ${headers} .headers.\"grpc-user-agent\" "router/"]
  [invoke jq-check-file-match ${headers} .status 200]
  [invoke jq-check-file-match ${trailers} .trailers.\"grpc-status\" 3]
  [invoke jq-check-file-match ${trailers} .trailers.\"grpc-message\" "Invalid payload"]
  [invoke jq-check-file-match ${trailers} .trailers.\"package_restricted\" "Virtual service package is restricted: lg.service.router"]

[cleanup]
