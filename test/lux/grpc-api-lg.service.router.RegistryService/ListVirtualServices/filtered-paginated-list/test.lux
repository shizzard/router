[doc]
Check if router replies with a filtered and paginated list of registered virtual services.
[enddoc]

[include ${ROUTER_DIR_TESTS_LUX}/__common/capture.luxinc]
[include ${ROUTER_DIR_TESTS_LUX}/__common/common.luxinc]
[include ${ROUTER_DIR_TESTS_LUX}/__common/grpc.luxinc]
[include ${ROUTER_DIR_TESTS_LUX}/__common/jq.luxinc]
[include ${ROUTER_DIR_TESTS_LUX}/__router/registry-service.luxinc]

[global request-file-service-A1-register=json/service-A1-register-request.json]
[global request-file-service-A2-register=json/service-A2-register-request.json]
[global request-file-service-B1-register=json/service-B1-register-request.json]
[global request-file-service-B2-register=json/service-B2-register-request.json]
[global request-file-service-C1-register=json/service-C1-register-request.json]
[global request-file-list-1=json/list-1-request.json]
[global template-file-list-2=json/list-2-request.template.json]
[global request-file-list-2=json/list-2-request.json]

[shell router]
  [invoke app-start]

[shell register-a1]
  [progress (register a1)]
  [invoke grpcc-start-unary ${grpc-service-name} ${grpc-method-register-virtual-service} json "" ${request-file-service-A1-register}]
  [progress (check response)]
  [invoke jq-check-file-match ${headers} .status 200]
  [invoke jq-check-file-match ${trailers} .trailers.\"grpc-status\" 0]

[shell register-a2]
  [progress (register a2)]
  [invoke grpcc-start-unary ${grpc-service-name} ${grpc-method-register-virtual-service} json "" ${request-file-service-A2-register}]
  [progress (check response)]
  [invoke jq-check-file-match ${headers} .status 200]
  [invoke jq-check-file-match ${trailers} .trailers.\"grpc-status\" 0]

[shell register-b1]
  [progress (register b1)]
  [invoke grpcc-start-unary ${grpc-service-name} ${grpc-method-register-virtual-service} json "" ${request-file-service-B1-register}]
  [progress (check response)]
  [invoke jq-check-file-match ${headers} .status 200]
  [invoke jq-check-file-match ${trailers} .trailers.\"grpc-status\" 0]

[shell register-b2]
  [progress (register b2)]
  [invoke grpcc-start-unary ${grpc-service-name} ${grpc-method-register-virtual-service} json "" ${request-file-service-B2-register}]
  [progress (check response)]
  [invoke jq-check-file-match ${headers} .status 200]
  [invoke jq-check-file-match ${trailers} .trailers.\"grpc-status\" 0]

[shell register-c1]
  [progress (register c1)]
  [invoke grpcc-start-unary ${grpc-service-name} ${grpc-method-register-virtual-service} json "" ${request-file-service-C1-register}]
  [progress (check response)]
  [invoke jq-check-file-match ${headers} .status 200]
  [invoke jq-check-file-match ${trailers} .trailers.\"grpc-status\" 0]

[shell list1]
  [progress (list)]
  [invoke grpcc-start-unary ${grpc-service-name} ${grpc-method-list-virtual-services} "json" "" ${request-file-list-1}]
  [progress (check response)]
  [invoke jq-check-file-match ${headers} .headers.\"content-type\" "application/grpc+proto"]
  [invoke jq-check-file-match ${headers} .headers.\"grpc-user-agent\" "router/"]
  [invoke jq-check-file-match ${headers} .status 200]
  [invoke jq-check-file-match ${data} ".services | length" 2]
  [invoke jq-check-file-match ${data} .services[0].service.stateless.package lg.test.package]
  [invoke jq-check-file-match ${data} .services[0].service.stateless.name StatelessServiceA]
  [invoke jq-check-file-match ${data} .services[0].service.stateless.methods[0].name MethodOne]
  [invoke jq-check-file-match ${data} .services[0].endpoint.host "test-1.lg"]
  [invoke jq-check-file-match ${data} .services[0].endpoint.port 8137]
  [invoke jq-check-file-match ${data} .services[1].service.stateless.package lg.test.package]
  [invoke jq-check-file-match ${data} .services[1].service.stateless.name StatelessServiceB]
  [invoke jq-check-file-match ${data} .services[1].service.stateless.methods[0].name MethodOne]
  [invoke jq-check-file-match ${data} .services[1].endpoint.host "test-1.lg"]
  [invoke jq-check-file-match ${data} .services[1].endpoint.port 8137]
  [invoke jq-check-file-match ${trailers} .trailers.\"grpc-status\" 0]
  [invoke jq-check-file-empty ${trailers} .trailers.\"grpc-message\"]
  [invoke jq-check-file ${data} .pagination_response.next_page_token]
  ?^(${capture-base64})$
  [global next-page-token=$1]
  [invoke check-ok]
  [progress (next page token ${next-page-token})]

[shell list2]
  [progress (prepare list second page request)]
  !sed 's~%PLACEHOLDER%~${next-page-token}~' ${template-file-list-2} > ${request-file-list-2}
  ?${sh-prompt}
  [progress (list second page)]
  [invoke grpcc-start-unary ${grpc-service-name} ${grpc-method-list-virtual-services} "json" "" ${request-file-list-2}]
  [progress (check response)]
  [invoke jq-check-file-match ${headers} .headers.\"content-type\" "application/grpc+proto"]
  [invoke jq-check-file-match ${headers} .headers.\"grpc-user-agent\" "router/"]
  [invoke jq-check-file-match ${headers} .status 200]
  [invoke jq-check-file-match ${data} ".services | length" 2]
  [invoke jq-check-file-match ${data} .services[0].service.stateless.package lg.test.package]
  [invoke jq-check-file-match ${data} .services[0].service.stateless.name StatelessServiceC]
  [invoke jq-check-file-match ${data} .services[0].service.stateless.methods[0].name MethodOne]
  [invoke jq-check-file-match ${data} .services[0].endpoint.host "test-1.lg"]
  [invoke jq-check-file-match ${data} .services[0].endpoint.port 8137]
  [invoke jq-check-file-match ${data} .pagination_response.next_page_token null]
  [invoke jq-check-file-match ${trailers} .trailers.\"grpc-status\" 0]
  [invoke jq-check-file-empty ${trailers} .trailers.\"grpc-message\"]

[cleanup]
